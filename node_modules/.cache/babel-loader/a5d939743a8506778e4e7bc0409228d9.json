{"ast":null,"code":"import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\"; //const eejs = require('ep_etherpad-lite/node/eejs/');\n//const settings = require('ep_etherpad-lite/node/utils/Settings');\n//exports.eejsBlock_editbarMenuRight = function (hook_name, args, cb) {\n//  args.content = eejs.content=\"foo\"; return cb(); };\n\nlet apiKey = \"308c704c36b41c846ba1713a59f92c6a9707ced910894de32070287a03bfcb68\";\nlet apiVersion = 1;\nlet site = \"localhost\";\nlet connectionType = \"http\";\nlet port = \":9001\"; // don't forget colon\n\nconst endPoint = point => `${connectionType}://${site}${port}/api/${apiVersion}/${point}?apikey=${apiKey}`;\n\nexport const createAuthor = async () => {\n  console.log(\"Attempting to create Author\");\n  let createAuthor = 'createAuthor';\n  console.log(endPoint(createAuthor)); //`/api/${apiVersion}/${point}?apikey=${apiKey}`\n  //308c704c36b41c846ba1713a59f92c6a9707ced910894de32070287a03bfcb68\n\n  return await axios.get(endPoint(createAuthor)).then(res => {\n    console.error(\"Post successful\");\n    console.error(res);\n    console.log(\"Author Created\");\n  });\n};\nexport const createPad = async () => {\n  console.log(\"Attempting to create Pad\");\n  let createAuthor = 'createAuthor';\n  let createSession = 'createSession';\n  let createGroup = 'createGroup';\n  let authorID = await axios.get(endPoint(createAuthor)).then(res => {\n    console.log(\"Author Created\" + res.data.authorID);\n    return res.data.authorID;\n  });\n  let groupID = await axios.get(endPoint(createGroup)).then(res => {\n    console.log(\"Group Created\" + res.data.groupID);\n    return res.data.groupID;\n  });\n  let sessionID = await axios.get(endPoint(createSession)).then(res => {\n    console.log(\"Session Created\" + res.data.sessionID);\n    return res.data.sessionID;\n  });\n  return \"a\";\n};","map":{"version":3,"sources":["C:/Users/JP/Documents/GitHub/etherpad-artense-client/src/api/server.js"],"names":["axios","React","useEffect","useState","apiKey","apiVersion","site","connectionType","port","endPoint","point","createAuthor","console","log","get","then","res","error","createPad","createSession","createGroup","authorID","data","groupID","sessionID"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C,C,CACA;AACA;AAEA;AACA;;AACA,IAAIC,MAAM,GAAG,kEAAb;AACA,IAAIC,UAAU,GAAG,CAAjB;AACA,IAAIC,IAAI,GAAG,WAAX;AACA,IAAIC,cAAc,GAAG,MAArB;AACA,IAAIC,IAAI,GAAG,OAAX,C,CAAmB;;AAEnB,MAAMC,QAAQ,GAAIC,KAAD,IAAY,GAAEH,cAAe,MAAKD,IAAK,GAAEE,IAAK,QAAOH,UAAW,IAAGK,KAAM,WAAUN,MAAO,EAA3G;;AAEA,OAAO,MAAMO,YAAY,GAAG,YAAY;AACpCC,EAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AAEA,MAAIF,YAAY,GAAG,cAAnB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACE,YAAD,CAApB,EAJoC,CAKpC;AACA;;AACA,SAAO,MAAMX,KAAK,CAACc,GAAN,CAAUL,QAAQ,CAACE,YAAD,CAAlB,EAAkCI,IAAlC,CAAwCC,GAAD,IAAS;AACzDJ,IAAAA,OAAO,CAACK,KAAR,CAAc,iBAAd;AACAL,IAAAA,OAAO,CAACK,KAAR,CAAcD,GAAd;AAEAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACH,GALY,CAAb;AAMF,CAbK;AAeP,OAAO,MAAMK,SAAS,GAAG,YAAY;AACjCN,EAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AAEA,MAAIF,YAAY,GAAG,cAAnB;AACA,MAAIQ,aAAa,GAAG,eAApB;AACA,MAAIC,WAAW,GAAG,aAAlB;AAEA,MAAIC,QAAQ,GAAG,MAAMrB,KAAK,CAACc,GAAN,CAAUL,QAAQ,CAACE,YAAD,CAAlB,EAAkCI,IAAlC,CAAwCC,GAAD,IAAS;AACjEJ,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAmBG,GAAG,CAACM,IAAJ,CAASD,QAAxC;AACA,WAAOL,GAAG,CAACM,IAAJ,CAASD,QAAhB;AACH,GAHoB,CAArB;AAIA,MAAIE,OAAO,GAAG,MAAMvB,KAAK,CAACc,GAAN,CAAUL,QAAQ,CAACW,WAAD,CAAlB,EAAiCL,IAAjC,CAAuCC,GAAD,IAAS;AAC/DJ,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAkBG,GAAG,CAACM,IAAJ,CAASC,OAAvC;AACA,WAAOP,GAAG,CAACM,IAAJ,CAASC,OAAhB;AACH,GAHmB,CAApB;AAIA,MAAIC,SAAS,GAAG,MAAMxB,KAAK,CAACc,GAAN,CAAUL,QAAQ,CAACU,aAAD,CAAlB,EAAmCJ,IAAnC,CAAyCC,GAAD,IAAS;AACnEJ,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAoBG,GAAG,CAACM,IAAJ,CAASE,SAAzC;AACA,WAAOR,GAAG,CAACM,IAAJ,CAASE,SAAhB;AACH,GAHqB,CAAtB;AAKA,SAAO,GAAP;AACH,CArBM","sourcesContent":["import axios from \"axios\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\n//const eejs = require('ep_etherpad-lite/node/eejs/');\r\n//const settings = require('ep_etherpad-lite/node/utils/Settings');\r\n\r\n//exports.eejsBlock_editbarMenuRight = function (hook_name, args, cb) {\r\n//  args.content = eejs.content=\"foo\"; return cb(); };\r\nlet apiKey = \"308c704c36b41c846ba1713a59f92c6a9707ced910894de32070287a03bfcb68\"\r\nlet apiVersion = 1\r\nlet site = \"localhost\"\r\nlet connectionType = \"http\"\r\nlet port = \":9001\" // don't forget colon\r\n\r\nconst endPoint = (point) => `${connectionType}://${site}${port}/api/${apiVersion}/${point}?apikey=${apiKey}`;\r\n\r\nexport const createAuthor = async () => {\r\n    console.log(\"Attempting to create Author\")\r\n\r\n    let createAuthor = 'createAuthor'\r\n    console.log(endPoint(createAuthor))\r\n    //`/api/${apiVersion}/${point}?apikey=${apiKey}`\r\n    //308c704c36b41c846ba1713a59f92c6a9707ced910894de32070287a03bfcb68\r\n    return await axios.get(endPoint(createAuthor)).then((res) => {\r\n        console.error(\"Post successful\")\r\n        console.error(res)\r\n\r\n        console.log(\"Author Created\")\r\n    }\r\n)}\r\n\r\nexport const createPad = async () => {\r\n    console.log(\"Attempting to create Pad\")\r\n\r\n    let createAuthor = 'createAuthor'\r\n    let createSession = 'createSession'\r\n    let createGroup = 'createGroup'\r\n\r\n    let authorID = await axios.get(endPoint(createAuthor)).then((res) => {\r\n        console.log(\"Author Created\" + res.data.authorID)\r\n        return res.data.authorID\r\n    })\r\n    let groupID = await axios.get(endPoint(createGroup)).then((res) => {\r\n        console.log(\"Group Created\" + res.data.groupID)\r\n        return res.data.groupID\r\n    })\r\n    let sessionID = await axios.get(endPoint(createSession)).then((res) => {\r\n        console.log(\"Session Created\" + res.data.sessionID)\r\n        return res.data.sessionID\r\n    })\r\n\r\n    return \"a\"\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}