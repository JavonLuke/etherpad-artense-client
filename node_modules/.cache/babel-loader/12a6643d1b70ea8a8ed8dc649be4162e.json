{"ast":null,"code":"/*\r\nconst Pad = (props) => {\r\n    // create Pad - ensure that you are logged in to create a pad\r\n    // get Pad - pass an iframe\r\n    // delete Pad\r\n    // get Pad HTML - pass html\r\n    // is valid author\r\n  \r\n    const [authorID, setAuthorID] = useState(props.authorID);\r\n    const [padID, setPadID] = useState(props.padID)\r\n    const [etherpadOptions, setEtherpadOptions] = useState(props.etherpadOptions);\r\n    let apiKey = \"308c704c36b41c846ba1713a59f92c6a9707ced910894de32070287a03bfcb68\"\r\n    let apiVersion = \"1.2.14\"\r\n    let site = \"localhost\"\r\n    let connectionType = \"http\"\r\n    let port = \":9001\" // don't forget colon\r\n    let createAuthor_endpoint = 'createAuthor'\r\n    let createSession_endpoint = 'createSession'\r\n    let createGroup_endpoint = 'createGroup'\r\n    let validUntil_endpoint = 2312905480;\r\n    let createGroupPadID_endpoint = 'createGroupPad'\r\n    let createPadID_endpoint = 'createPad'\r\n    let defaultText = \"\";\r\n    let testPadName = \"testCreatePad\"\r\n    let testText = \"this is the first sentence - testing\"\r\n    let clientLocation = \"http://localhost:9001/p/\"\r\n\r\n\r\n\r\n    const endPoint = (point) => `${connectionType}://${site}${port}/api/${apiVersion}/${point}?apikey=${apiKey}`;\r\n\r\n    export const testPad = async () => {\r\n        console.log(\"Attempting to test pad\")\r\n        let authorID = await axios.get(endPoint(createAuthor_endpoint)).then((res) => {\r\n            console.log(\"Author Created: \" + res.data.data.authorID)\r\n            return res.data.data.authorID\r\n        })\r\n        console.log(authorID)\r\n        \r\n        \r\n       // let groupPadEndPoint_endpoint = `${endPoint(createGroupPadID_endpoint)}` + `&groupID=${groupID}` + `&padName=${\"testPadName\"}` +\r\n       // `&text=${testText}`\r\n        \r\n    \r\n    \r\n        let padEndPoint_endpoint = `${endPoint(createPadID_endpoint)}` + `&padID=testCreatePad` + `&text=${testText}`\r\n    \r\n        let groupPadID = await axios.get(padEndPoint_endpoint).then((res) => {\r\n            console.log(res)\r\n            if(res.data.data === null) {\r\n                return \"testCreatePad\"\r\n            }\r\n            console.log(\"Pad Created: \" + res.data.data.padID)\r\n            return res.data.data.padID\r\n        })\r\n    \r\n        let padLocation = `${clientLocation}${groupPadID}`// + translateEtherpadOptions(etherpadOptions)\r\n    \r\n        return { \"authorID\": authorID,\r\n        \r\n    \"groupPadID\": groupPadID,\r\n    \"clientLocation\": clientLocation,\r\n    \"padLocation\": padLocation}\r\n    }\r\n    \r\n    export const testPad_setText = async () => {\r\n    \r\n        let padEndPoint_endpoint = `${endPoint(\"setText\")}` + `&padID=${testPadName}` + `&text=I Just Set the text`\r\n    \r\n     await axios.get(padEndPoint_endpoint).then((res) => {\r\n            console.log(res)\r\n           \r\n            console.log(\"Pad text set: \")\r\n           // return res.data.data.padID\r\n        })\r\n    \r\n    }\r\n    \r\n    \r\n    export const testPad_getHTML = async () => {\r\n    let padEndPoint_endpoint = `${endPoint(\"getHTML\")}` + `&padID=${testPadName}` \r\n    \r\n    return await axios.get(padEndPoint_endpoint).then((res) => {\r\n            console.log(res)\r\n           \r\n            console.log(\"Pad get HTML\")\r\n           // return res.data.data.padID\r\n           return res.data\r\n        })\r\n    }\r\n\r\n\r\n\r\n}*/","map":{"version":3,"sources":["C:/Users/JP/Documents/GitHub/etherpad-artense-client/src/etherpad/Pad.js"],"names":[],"mappings":"AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["\r\n\r\n\r\n/*\r\nconst Pad = (props) => {\r\n    // create Pad - ensure that you are logged in to create a pad\r\n    // get Pad - pass an iframe\r\n    // delete Pad\r\n    // get Pad HTML - pass html\r\n    // is valid author\r\n  \r\n    const [authorID, setAuthorID] = useState(props.authorID);\r\n    const [padID, setPadID] = useState(props.padID)\r\n    const [etherpadOptions, setEtherpadOptions] = useState(props.etherpadOptions);\r\n    let apiKey = \"308c704c36b41c846ba1713a59f92c6a9707ced910894de32070287a03bfcb68\"\r\n    let apiVersion = \"1.2.14\"\r\n    let site = \"localhost\"\r\n    let connectionType = \"http\"\r\n    let port = \":9001\" // don't forget colon\r\n    let createAuthor_endpoint = 'createAuthor'\r\n    let createSession_endpoint = 'createSession'\r\n    let createGroup_endpoint = 'createGroup'\r\n    let validUntil_endpoint = 2312905480;\r\n    let createGroupPadID_endpoint = 'createGroupPad'\r\n    let createPadID_endpoint = 'createPad'\r\n    let defaultText = \"\";\r\n    let testPadName = \"testCreatePad\"\r\n    let testText = \"this is the first sentence - testing\"\r\n    let clientLocation = \"http://localhost:9001/p/\"\r\n\r\n\r\n\r\n    const endPoint = (point) => `${connectionType}://${site}${port}/api/${apiVersion}/${point}?apikey=${apiKey}`;\r\n\r\n    export const testPad = async () => {\r\n        console.log(\"Attempting to test pad\")\r\n        let authorID = await axios.get(endPoint(createAuthor_endpoint)).then((res) => {\r\n            console.log(\"Author Created: \" + res.data.data.authorID)\r\n            return res.data.data.authorID\r\n        })\r\n        console.log(authorID)\r\n        \r\n        \r\n       // let groupPadEndPoint_endpoint = `${endPoint(createGroupPadID_endpoint)}` + `&groupID=${groupID}` + `&padName=${\"testPadName\"}` +\r\n       // `&text=${testText}`\r\n        \r\n    \r\n    \r\n        let padEndPoint_endpoint = `${endPoint(createPadID_endpoint)}` + `&padID=testCreatePad` + `&text=${testText}`\r\n    \r\n        let groupPadID = await axios.get(padEndPoint_endpoint).then((res) => {\r\n            console.log(res)\r\n            if(res.data.data === null) {\r\n                return \"testCreatePad\"\r\n            }\r\n            console.log(\"Pad Created: \" + res.data.data.padID)\r\n            return res.data.data.padID\r\n        })\r\n    \r\n        let padLocation = `${clientLocation}${groupPadID}`// + translateEtherpadOptions(etherpadOptions)\r\n    \r\n        return { \"authorID\": authorID,\r\n        \r\n    \"groupPadID\": groupPadID,\r\n    \"clientLocation\": clientLocation,\r\n    \"padLocation\": padLocation}\r\n    }\r\n    \r\n    export const testPad_setText = async () => {\r\n    \r\n        let padEndPoint_endpoint = `${endPoint(\"setText\")}` + `&padID=${testPadName}` + `&text=I Just Set the text`\r\n    \r\n     await axios.get(padEndPoint_endpoint).then((res) => {\r\n            console.log(res)\r\n           \r\n            console.log(\"Pad text set: \")\r\n           // return res.data.data.padID\r\n        })\r\n    \r\n    }\r\n    \r\n    \r\n    export const testPad_getHTML = async () => {\r\n    let padEndPoint_endpoint = `${endPoint(\"getHTML\")}` + `&padID=${testPadName}` \r\n    \r\n    return await axios.get(padEndPoint_endpoint).then((res) => {\r\n            console.log(res)\r\n           \r\n            console.log(\"Pad get HTML\")\r\n           // return res.data.data.padID\r\n           return res.data\r\n        })\r\n    }\r\n\r\n\r\n\r\n}*/"]},"metadata":{},"sourceType":"module"}