{"ast":null,"code":"import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\"; //const eejs = require('ep_etherpad-lite/node/eejs/');\n//const settings = require('ep_etherpad-lite/node/utils/Settings');\n//exports.eejsBlock_editbarMenuRight = function (hook_name, args, cb) {\n//  args.content = eejs.content=\"foo\"; return cb(); };\n\nlet apiKey = \"308c704c36b41c846ba1713a59f92c6a9707ced910894de32070287a03bfcb68\";\nlet apiVersion = \"1.2.14\";\nlet site = \"localhost\";\nlet connectionType = \"http\";\nlet port = \":9001\"; // don't forget colon\n\nlet createAuthor_endpoint = 'createAuthor';\nlet createSession_endpoint = 'createSession';\nlet createGroup_endpoint = 'createGroup';\nlet validUntil_endpoint = 2312905480;\nlet createGroupPadID_endpoint = 'createGroupPad';\nlet defaultText = \"\";\nlet clientLocation = \"http://localhost:9001/p/\";\n\nconst endPoint = point => `${connectionType}://${site}${port}/api/${apiVersion}/${point}?apikey=${apiKey}`;\n\nexport const createAuthor = async () => {\n  console.log(\"Attempting to create Author\");\n  let createAuthor = 'createAuthor';\n  console.log(endPoint(createAuthor_endpoint)); //`/api/${apiVersion}/${point}?apikey=${apiKey}`\n  //308c704c36b41c846ba1713a59f92c6a9707ced910894de32070287a03bfcb68\n\n  return await axios.get(endPoint(createAuthor_endpoint)).then(res => {\n    console.error(\"Post successful\");\n    console.error(res);\n    console.log(\"Author Created\");\n  });\n};\nexport const createGroupPad = async (groupID, etherpadOptions) => {\n  console.log(\"Attempting to create Pad\");\n\n  const translateEtherpadOptions = etherpadOptions => {\n    return \"?showChat=false&showLineNumbers=false\";\n  };\n\n  let authorID = await axios.get(endPoint(createAuthor_endpoint)).then(res => {\n    console.log(\"Author Created: \" + res.data.data.authorID);\n    return res.data.data.authorID;\n  });\n  groupID = await axios.get(endPoint(createGroup_endpoint)).then(res => {\n    console.log(\"Group Created\" + res.data.data.groupID);\n    return res.data.data.groupID;\n  });\n  let sessionEndPoint = `${endPoint(createSession_endpoint)}` + `&authorID=${authorID}` + `&groupID=${groupID}` + `&validUntil=${validUntil}`;\n  let sessionID = await axios.get(sessionEndPoint).then(res => {\n    console.log(res);\n    console.log(\"Session Created: \" + res.data.data.sessionID);\n    return res.data.data.sessionID;\n  });\n  let groupPadEndPoint_endpoint = `${endPoint(createGroupPadID_endpoint)}` + `&groupID=${groupID}` + `&padName=${\"testPadName\"}` + `&text=${defaultText}`;\n  let groupPadID = await axios.get(groupPadEndPoint_endpoint).then(res => {\n    console.log(res);\n    console.log(\"Group Pad Created: \" + res.data.data.padID);\n    return res.data.data.padID;\n  });\n  let padLocation = `${clientLocation}${groupPadID}` + translateEtherpadOptions(etherpadOptions);\n  return {\n    \"authorID\": authorID,\n    \"sessionID\": sessionID,\n    \"groupID\": groupID,\n    \"groupPadID\": groupPadID,\n    \"clientLocation\": clientLocation,\n    \"padLocation\": padLocation\n  };\n};","map":{"version":3,"sources":["C:/Users/JP/Documents/GitHub/etherpad-artense-client/src/api/server.js"],"names":["axios","React","useEffect","useState","apiKey","apiVersion","site","connectionType","port","createAuthor_endpoint","createSession_endpoint","createGroup_endpoint","validUntil_endpoint","createGroupPadID_endpoint","defaultText","clientLocation","endPoint","point","createAuthor","console","log","get","then","res","error","createGroupPad","groupID","etherpadOptions","translateEtherpadOptions","authorID","data","sessionEndPoint","validUntil","sessionID","groupPadEndPoint_endpoint","groupPadID","padID","padLocation"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\n//const eejs = require('ep_etherpad-lite/node/eejs/');\r\n//const settings = require('ep_etherpad-lite/node/utils/Settings');\r\n\r\n//exports.eejsBlock_editbarMenuRight = function (hook_name, args, cb) {\r\n//  args.content = eejs.content=\"foo\"; return cb(); };\r\nlet apiKey = \"308c704c36b41c846ba1713a59f92c6a9707ced910894de32070287a03bfcb68\"\r\nlet apiVersion = \"1.2.14\"\r\nlet site = \"localhost\"\r\nlet connectionType = \"http\"\r\nlet port = \":9001\" // don't forget colon\r\nlet createAuthor_endpoint = 'createAuthor'\r\nlet createSession_endpoint = 'createSession'\r\nlet createGroup_endpoint = 'createGroup'\r\nlet validUntil_endpoint = 2312905480;\r\nlet createGroupPadID_endpoint = 'createGroupPad'\r\nlet defaultText = \"\";\r\nlet clientLocation = \"http://localhost:9001/p/\"\r\n\r\nconst endPoint = (point) => `${connectionType}://${site}${port}/api/${apiVersion}/${point}?apikey=${apiKey}`;\r\n\r\nexport const createAuthor = async () => {\r\n    console.log(\"Attempting to create Author\")\r\n\r\n    let createAuthor = 'createAuthor'\r\n    console.log(endPoint(createAuthor_endpoint))\r\n    //`/api/${apiVersion}/${point}?apikey=${apiKey}`\r\n    //308c704c36b41c846ba1713a59f92c6a9707ced910894de32070287a03bfcb68\r\n    return await axios.get(endPoint(createAuthor_endpoint)).then((res) => {\r\n        console.error(\"Post successful\")\r\n        console.error(res)\r\n\r\n        console.log(\"Author Created\")\r\n    }\r\n)}\r\n\r\nexport const createGroupPad = async (groupID, etherpadOptions) => {\r\n    console.log(\"Attempting to create Pad\")\r\n\r\n    const translateEtherpadOptions = (etherpadOptions) => {\r\n        return \"?showChat=false&showLineNumbers=false\"\r\n      }\r\n\r\n    let authorID = await axios.get(endPoint(createAuthor_endpoint)).then((res) => {\r\n        console.log(\"Author Created: \" + res.data.data.authorID)\r\n        return res.data.data.authorID\r\n    })\r\n    groupID = await axios.get(endPoint(createGroup_endpoint)).then((res) => {\r\n        console.log(\"Group Created\" + res.data.data.groupID)\r\n        return res.data.data.groupID\r\n    })\r\n\r\n    \r\n    let sessionEndPoint = `${endPoint(createSession_endpoint)}` + `&authorID=${authorID}` + `&groupID=${groupID}` +\r\n    `&validUntil=${validUntil}`\r\n\r\n    let sessionID = await axios.get(sessionEndPoint).then((res) => {\r\n        console.log(res)\r\n        console.log(\"Session Created: \" + res.data.data.sessionID)\r\n        return res.data.data.sessionID\r\n    })\r\n\r\n    let groupPadEndPoint_endpoint = `${endPoint(createGroupPadID_endpoint)}` + `&groupID=${groupID}` + `&padName=${\"testPadName\"}` +\r\n    `&text=${defaultText}`\r\n\r\n    let groupPadID = await axios.get(groupPadEndPoint_endpoint).then((res) => {\r\n        console.log(res)\r\n        console.log(\"Group Pad Created: \" + res.data.data.padID)\r\n        return res.data.data.padID\r\n    })\r\n\r\n    let padLocation = `${clientLocation}${groupPadID}` + translateEtherpadOptions(etherpadOptions)\r\n\r\n    return { \"authorID\": authorID,\r\n    \"sessionID\": sessionID,\r\n    \"groupID\": groupID,\r\n\"groupPadID\": groupPadID,\r\n\"clientLocation\": clientLocation,\r\n\"padLocation\": padLocation}\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}