{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JP\\\\Documents\\\\GitHub\\\\etherpad-artense-client\\\\src\\\\components\\\\Dashboard\\\\Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Link from 'react-dom';\nimport { useState } from 'react';\nimport etherpad from '../../etherpad/Pad'; //import Pad from '../../../backend/Pad'\n\nimport Pad from '../../etherpad/Pad';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nasync function createPad() {\n  console.log(\"CreatePad Front End\");\n  return fetch('http://localhost:8080/createPad', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    } //,      body: JSON.stringify(credentials)\n\n  }).then(data => {\n    console.log(data);\n    return data.json();\n  });\n}\n\nexport default function Dashboard(props) {\n  _s();\n\n  const [etherpadOptions, setEtherpadOptions] = useState(props.etherpadOptions);\n  const [padID, setPadID] = useState(props.padID); // <button onClick={setPadID(createPad())}>Create Pad</button>\n\n  console.log(\"Set Pad ID\" + padID); //<UserPads authorID = \"testAuthor\"> </UserPads>\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: {\n        pathName: \"/pad\",\n        state: {\n          padID: padID\n        }\n      },\n      children: \"Get Pad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Dashboard, \"9uTUD73oHgf6J+eHQHnlFVM/niU=\");\n\n_c = Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["C:/Users/JP/Documents/GitHub/etherpad-artense-client/src/components/Dashboard/Dashboard.js"],"names":["React","Link","useState","etherpad","Pad","createPad","console","log","fetch","method","headers","then","data","json","Dashboard","props","etherpadOptions","setEtherpadOptions","padID","setPadID","pathName","state"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,QAAP,MAAqB,oBAArB,C,CACA;;AACA,OAAOC,GAAP,MAAgB,oBAAhB;;;AAEA,eAAeC,SAAf,GAA2B;AACzBC,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AAEA,SAAOC,KAAK,CAAC,iCAAD,EAAoC;AAC5CC,IAAAA,MAAM,EAAE,MADoC;AAE5CC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX,KAFmC,CAI3C;;AAJ2C,GAApC,CAAL,CAMNC,IANM,CAMAC,IAAD,IAAU;AACZN,IAAAA,OAAO,CAACC,GAAR,CAAYK,IAAZ;AACA,WAAOA,IAAI,CAACC,IAAL,EAAP;AAAmB,GARhB,CAAP;AAUD;;AAID,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AAEzC,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCf,QAAQ,CAACa,KAAK,CAACC,eAAP,CAAtD;AACI,QAAM,CAACE,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAACa,KAAK,CAACG,KAAP,CAAlC,CAHqC,CAIzC;;AACAZ,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAeW,KAA3B,EALyC,CAMzC;;AACE,sBACE;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAIA,QAAC,IAAD;AAAM,MAAA,EAAE,EAAE;AACRE,QAAAA,QAAQ,EAAE,MADF;AAERC,QAAAA,KAAK,EAAE;AACLH,UAAAA,KAAK,EAAGA;AADH;AAFC,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GAzBuBJ,S;;KAAAA,S","sourcesContent":["import React from 'react';\r\nimport Link from 'react-dom';\r\nimport { useState } from 'react';\r\nimport etherpad from '../../etherpad/Pad'\r\n//import Pad from '../../../backend/Pad'\r\nimport Pad from '../../etherpad/Pad'\r\n\r\nasync function createPad() {\r\n  console.log(\"CreatePad Front End\")\r\n  \r\n  return fetch('http://localhost:8080/createPad', {\r\n      method: 'POST',\r\n      headers: {\r\n          'Content-Type': 'application/json'\r\n      }//,      body: JSON.stringify(credentials)\r\n  })\r\n  .then((data) => {\r\n      console.log(data)\r\n      return data.json()})\r\n    \r\n}\r\n\r\n\r\n\r\nexport default function Dashboard(props) {\r\n\r\nconst [etherpadOptions, setEtherpadOptions] = useState(props.etherpadOptions);\r\n    const [padID, setPadID] = useState(props.padID)\r\n// <button onClick={setPadID(createPad())}>Create Pad</button>\r\nconsole.log(\"Set Pad ID\" + padID)\r\n//<UserPads authorID = \"testAuthor\"> </UserPads>\r\n  return(\r\n    <div>\r\n    <h2>Dashboard</h2>\r\n   \r\n    \r\n    <Link to={{\r\n      pathName: \"/pad\",\r\n      state: {\r\n        padID : padID\r\n      }}\r\n    }\r\n      \r\n      >Get Pad</Link>\r\n\r\n    </div>\r\n\r\n\r\n  );\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}