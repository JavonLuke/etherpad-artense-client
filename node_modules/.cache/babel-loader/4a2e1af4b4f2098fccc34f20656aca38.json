{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JP\\\\local_projects\\\\etherpad\\\\etherpad\\\\src\\\\App.js\";\nimport logo from \"./logo.svg\";\nimport './App.css'; //const eejs = require('ep_etherpad-lite/node/eejs/'); \n//const settings = require('ep_etherpad-lite/node/utils/Settings');\n//exports.eejsBlock_editbarMenuRight = function (hook_name, args, cb) { \n//  args.content = eejs.content=\"foo\"; return cb(); };\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nlet api1 = require('etherpad-lite-client');\n\nconsole.log(api1); // alert(api1)\n\nlet etherpad = api1.connect({\n  apikey: 'e0ee8e03e729eb36821bc1ccd2a9710adf9bf292841b563bc9f75f3d8df7e92f',\n  host: 'localhost',\n  port: 9001\n}); //http://localhost:9001/\n//192.168.2.13\n\nconsole.log(etherpad);\netherpad.createGroup(function (error, data) {\n  if (error) alert('Error creating group: ' + error.message);else console.log('New group created: ' + data.groupID);\n});\netherpad.createGroup(function (error, data) {\n  if (error) alert('Error creating group: ' + error.message);else console.log('New group created: ' + data.groupID);\n\n  if (data) {\n    var args = {\n      groupID: data.groupID,\n      padName: 'testpad',\n      text: 'Hello world!'\n    };\n    let a = etherpad.createGroupPad(args, function (error, data) {\n      if (error) alert('Error creating pad: ' + error.message);else console.log('New pad created: ' + data.padID);\n      console.log(data);\n      /*\n        console.log(data)\n        alert(data.padID)\n        alert(typeof(data.padID))\n      \n      \n      \n      \n        etherpad.getHTML(data.padID, function(error, data) {\n          if(error) alert('Error getting html: ' + error.message)\n        else console.log('New pad created: ' + data)\n        */\n      // some code\n    });\n    console.log(a);\n    let b = etherpad.createPad(\"ttt\", [\"hello\"]);\n    console.log(b);\n  }\n});\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Edit \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"src/App.js\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 16\n        }, this), \" and save to reload.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"App-link\",\n        href: \"https://reactjs.org\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"Learn React\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/JP/local_projects/etherpad/etherpad/src/App.js"],"names":["api1","require","console","log","etherpad","connect","apikey","host","port","createGroup","error","data","alert","message","groupID","args","padName","text","a","createGroupPad","padID","b","createPad","App","logo"],"mappings":";;AACA,OAAO,WAAP,C,CACA;AACA;AAEA;AACA;;;;AAGA,IAAIA,IAAI,GAAGC,OAAO,CAAC,sBAAD,CAAlB;;AACAC,OAAO,CAACC,GAAR,CAAYH,IAAZ,E,CACA;;AACA,IAAII,QAAQ,GAAGJ,IAAI,CAACK,OAAL,CAAa;AAC1BC,EAAAA,MAAM,EAAE,kEADkB;AAE1BC,EAAAA,IAAI,EAAE,WAFoB;AAG1BC,EAAAA,IAAI,EAAE;AAHoB,CAAb,CAAf,C,CAKA;AACA;;AACAN,OAAO,CAACC,GAAR,CAAYC,QAAZ;AAEAA,QAAQ,CAACK,WAAT,CAAqB,UAASC,KAAT,EAAgBC,IAAhB,EAAsB;AACzC,MAAGD,KAAH,EAAUE,KAAK,CAAC,2BAA2BF,KAAK,CAACG,OAAlC,CAAL,CAAV,KACKX,OAAO,CAACC,GAAR,CAAY,wBAAwBQ,IAAI,CAACG,OAAzC;AACN,CAHD;AAMAV,QAAQ,CAACK,WAAT,CAAqB,UAASC,KAAT,EAAgBC,IAAhB,EAAsB;AACzC,MAAGD,KAAH,EAAUE,KAAK,CAAC,2BAA2BF,KAAK,CAACG,OAAlC,CAAL,CAAV,KACKX,OAAO,CAACC,GAAR,CAAY,wBAAwBQ,IAAI,CAACG,OAAzC;;AAEL,MAAGH,IAAH,EAAS;AAEX,QAAII,IAAI,GAAG;AACTD,MAAAA,OAAO,EAAEH,IAAI,CAACG,OADL;AAETE,MAAAA,OAAO,EAAE,SAFA;AAGTC,MAAAA,IAAI,EAAE;AAHG,KAAX;AAKA,QAAIC,CAAC,GAAGd,QAAQ,CAACe,cAAT,CAAwBJ,IAAxB,EAA8B,UAASL,KAAT,EAAgBC,IAAhB,EAAsB;AAC1D,UAAGD,KAAH,EAAUE,KAAK,CAAC,yBAAyBF,KAAK,CAACG,OAAhC,CAAL,CAAV,KACKX,OAAO,CAACC,GAAR,CAAY,sBAAsBQ,IAAI,CAACS,KAAvC;AACLlB,MAAAA,OAAO,CAACC,GAAR,CAAYQ,IAAZ;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACD,KAjBK,CAAR;AAkBET,IAAAA,OAAO,CAACC,GAAR,CAAYe,CAAZ;AAED,QAAIG,CAAC,GAAGjB,QAAQ,CAACkB,SAAT,CAAmB,KAAnB,EAA0B,CAAC,OAAD,CAA1B,CAAR;AACDpB,IAAAA,OAAO,CAACC,GAAR,CAAYkB,CAAZ;AAGG;AACF,CApCD;;AAuCA,SAASE,GAAT,GAAe;AACb,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BAEE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,8BACE;AAAK,QAAA,GAAG,EAAEC,IAAV;AAAgB,QAAA,SAAS,EAAC,UAA1B;AAAqC,QAAA,GAAG,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAA,yCACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADP;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAQE;AACE,QAAA,SAAS,EAAC,UADZ;AAEE,QAAA,IAAI,EAAC,qBAFP;AAGE,QAAA,MAAM,EAAC,QAHT;AAIE,QAAA,GAAG,EAAC,qBAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;;KAvBQD,G;AAyBT,eAAeA,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\n//const eejs = require('ep_etherpad-lite/node/eejs/'); \n//const settings = require('ep_etherpad-lite/node/utils/Settings');\n\n//exports.eejsBlock_editbarMenuRight = function (hook_name, args, cb) { \n//  args.content = eejs.content=\"foo\"; return cb(); };\n\n\nlet api1 = require('etherpad-lite-client')\nconsole.log(api1)\n// alert(api1)\nlet etherpad = api1.connect({\n  apikey: 'e0ee8e03e729eb36821bc1ccd2a9710adf9bf292841b563bc9f75f3d8df7e92f',\n  host: 'localhost',\n  port: 9001,\n})\n//http://localhost:9001/\n//192.168.2.13\nconsole.log(etherpad)\n \netherpad.createGroup(function(error, data) {\n  if(error) alert('Error creating group: ' + error.message)\n  else console.log('New group created: ' + data.groupID)\n})\n\n\netherpad.createGroup(function(error, data) {\n  if(error) alert('Error creating group: ' + error.message)\n  else console.log('New group created: ' + data.groupID)\n\n  if(data) {\n\nvar args = {\n  groupID: data.groupID,\n  padName: 'testpad',\n  text: 'Hello world!',\n}\nlet a = etherpad.createGroupPad(args, function(error, data) {\n  if(error) alert('Error creating pad: ' + error.message)\n  else console.log('New pad created: ' + data.padID)\n  console.log(data)\n/*\n  console.log(data)\n  alert(data.padID)\n  alert(typeof(data.padID))\n\n\n\n\n  etherpad.getHTML(data.padID, function(error, data) {\n    if(error) alert('Error getting html: ' + error.message)\n  else console.log('New pad created: ' + data)\n  */\n    // some code\n  })\n  console.log(a)\n\n let b = etherpad.createPad(\"ttt\", [\"hello\"])\nconsole.log(b)\n\n\n  }\n})\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      \n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        \n        \n        \n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}