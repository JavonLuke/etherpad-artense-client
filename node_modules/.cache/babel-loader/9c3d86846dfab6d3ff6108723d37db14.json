{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JP\\\\Documents\\\\GitHub\\\\etherpad-artense-client\\\\src\\\\components\\\\Dashboard\\\\Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport Link from 'react-dom';\nimport { useState } from 'react';\nimport UserPads from \"../UserPads/UserPads\";\nimport * as pad from \"../../etherpad/Pad\";\nimport etherpad from '../../etherpad/Pad'; //import Pad from '../../../backend/Pad'\n\nimport Pad from '../../etherpad/Pad';\nimport { useHistory } from 'react-router';\n/*async function createPad() {\r\n  console.log(\"CreatePad Front End\")\r\n  \r\n  return fetch('http://localhost:8080/createPad', {\r\n      method: 'POST',\r\n      headers: {\r\n          'Content-Type': 'application/json'\r\n      }//,      body: JSON.stringify(credentials)\r\n  })\r\n  .then((data) => {\r\n      console.log(data)\r\n      return data.json()})\r\n    \r\n}*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Dashboard(props) {\n  _s();\n\n  //const history = useHistory()\n  const [etherpadOptions, setEtherpadOptions] = useState(props.etherpadOptions);\n  const [padID, setPadID] = useState(undefined);\n  useEffect(() => {}, [padID]);\n  console.log(\"Set Pad ID\" + padID); //<UserPads authorID = \"testAuthor\"> </UserPads>\n  // group\n\n  /*  useEffect(() => {\r\n      if(!padID) return\r\n  \r\n  \r\n      history.pushState(\"/pad\")\r\n      \r\n        }, [padID])*/\n\n  /**<button onClick={async () => {\r\n        let a = await createPad()\r\n        setPadID(a.padID)}}>Create Pad</button>\r\n  \r\n    \r\n      <Link to={{\r\n        pathName: \"/pad\",\r\n        state: {\r\n          padID : padID\r\n        }}}>Get Pad</Link>  */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: async () => {\n        let a = await pad.createPad();\n        setPadID(a.padID);\n      },\n      children: \"Create Pad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(UserPads, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Dashboard, \"VrqEKRSDNhzvvfM4Homc1NKFOjs=\");\n\n_c = Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["C:/Users/JP/Documents/GitHub/etherpad-artense-client/src/components/Dashboard/Dashboard.js"],"names":["React","useEffect","Link","useState","UserPads","pad","etherpad","Pad","useHistory","Dashboard","props","etherpadOptions","setEtherpadOptions","padID","setPadID","undefined","console","log","a","createPad"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAO,KAAKC,GAAZ,MAAqB,oBAArB;AACA,OAAOC,QAAP,MAAqB,oBAArB,C,CACA;;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AACA,SAASC,UAAT,QAA2B,cAA3B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAIA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACxC;AACD,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCT,QAAQ,CAACO,KAAK,CAACC,eAAP,CAAtD;AACA,QAAM,CAACE,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAACY,SAAD,CAAlC;AAEAd,EAAAA,SAAS,CAAC,MAAM,CAGf,CAHQ,EAGN,CAACY,KAAD,CAHM,CAAT;AAKAG,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAeJ,KAA3B,EAVyC,CAWzC;AAKE;;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEE,sBACE;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAQ,MAAA,OAAO,EAAE,YAAY;AAC3B,YAAIK,CAAC,GAAG,MAAMb,GAAG,CAACc,SAAJ,EAAd;AACAL,QAAAA,QAAQ,CAACI,CAAC,CAACL,KAAH,CAAR;AAAkB,OAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA,eAMD,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YANC;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GAnDuBJ,S;;KAAAA,S","sourcesContent":["import React, { useEffect } from 'react';\r\nimport Link from 'react-dom';\r\nimport { useState } from 'react';\r\nimport UserPads from \"../UserPads/UserPads\"\r\nimport * as pad from \"../../etherpad/Pad\"\r\nimport etherpad from '../../etherpad/Pad'\r\n//import Pad from '../../../backend/Pad'\r\nimport Pad from '../../etherpad/Pad'\r\nimport { useHistory } from 'react-router';\r\n\r\n/*async function createPad() {\r\n  console.log(\"CreatePad Front End\")\r\n  \r\n  return fetch('http://localhost:8080/createPad', {\r\n      method: 'POST',\r\n      headers: {\r\n          'Content-Type': 'application/json'\r\n      }//,      body: JSON.stringify(credentials)\r\n  })\r\n  .then((data) => {\r\n      console.log(data)\r\n      return data.json()})\r\n    \r\n}*/\r\n\r\n\r\n\r\nexport default function Dashboard(props) {\r\n //const history = useHistory()\r\nconst [etherpadOptions, setEtherpadOptions] = useState(props.etherpadOptions);\r\nconst [padID, setPadID] = useState(undefined)\r\n \r\nuseEffect(() => {\r\n\r\n\r\n}, [padID])\r\n\r\nconsole.log(\"Set Pad ID\" + padID)\r\n//<UserPads authorID = \"testAuthor\"> </UserPads>\r\n\r\n\r\n\r\n\r\n  // group\r\n/*  useEffect(() => {\r\n    if(!padID) return\r\n\r\n\r\n    history.pushState(\"/pad\")\r\n    \r\n      }, [padID])*/\r\n\r\n\r\n/**<button onClick={async () => {\r\n      let a = await createPad()\r\n      setPadID(a.padID)}}>Create Pad</button>\r\n\r\n  \r\n    <Link to={{\r\n      pathName: \"/pad\",\r\n      state: {\r\n        padID : padID\r\n      }}}>Get Pad</Link>  */\r\n\r\n  return(\r\n    <div>\r\n    <h2>Dashboard</h2>\r\n    <button onClick={async () => {\r\n      let a = await pad.createPad()\r\n      setPadID(a.padID)}}>Create Pad</button>\r\n\r\n   <UserPads></UserPads>\r\n    \r\n\r\n    </div>\r\n\r\n\r\n  );\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}